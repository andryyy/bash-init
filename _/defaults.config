# Service config

##----------------------------##
##--------- Restarts ---------##
##----------------------------##

### Policy: never, on-failure, periodic
restart=always

### If restart=on-failure, expect this exit code or restart task depending on policy.
### Multiple exit codes can be defined separated by comma: 0,1,2
success_exit=0


##------------------------------------##
##--------- Periodic options ---------##
##------------------------------------##

### Interval in seconds
periodic_interval=60

### Stop
no_overlap=true

##----------------------------##
##--------- Packages ---------##
##----------------------------##

### apk and apt are supported, package manager must not exit non-zero or the service container fails

### Install additional packages
system_packages=

### Package manager will wait 600s for a lock
package_manager_lock_wait=600


##--------------------------##
##--------- Probes ---------##
##--------------------------##

### Services with probe will only be healthy if the probe is successful
### Services that depend on a service with probe will wait for the probe to return success

### http:hostname_or_ip:port:path:method:expected_status_code
### Example: "http:example.com:81:/:GET:200"
probe=

### Do not stop probing on first success
continous_probe=1

### Run probe every n seconds if continous_probe=1
probe_interval=10

### Try probe n times before setting the status to unhealthy (hard-fail)
probe_retries=3

### Timeout for probe connections
### The http_probe function will wait for 5s for a response
probe_timeout=3

### Can be used to wait for probe to return success before starting the command in a service container
probe_as_dependency=0

### Action when a probe hard-fails
### The action will always "terminate" when probe_as_dependency=1
### Can be one of:
### "terminate" - a SIGTERM from within the PID group to itself)
### "stop" - the main process will send a signal to the PID group according to stop_signal
### "reload" - the main process will send a reload to the PID group according to reload_signal
### "restart" - same as "stop" but it will allow the service to respawn
probe_failure_action=restart


##--------------------------------##
##--------- Dependencies ---------##
##--------------------------------##

## otherservice,yetanotherservice
## A service with a probe will only be healthy when the probe succeeds and the service entered running state
depends=

## A dependency must be in running state for n seconds to be met
depends_healthy_for=10

##---------------------------##
##--------- Signals ---------##
##---------------------------##

### Stop signals, will be tried left to right
stop_signal=SIGTERM,SIGKILL

### Reload signal, single signal
### A reload signal is sent to the PID spawned by the defined command only
reload_signal=SIGHUP
